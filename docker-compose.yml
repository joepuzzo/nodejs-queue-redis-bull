version: "3.7"

services:

  redis:
    image: redis
    container_name: tutorial_redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379

  redis-commander:
    container_name: tutorial_redis-commander
    image: rediscommander/redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
  
  rabbit:
    image: rabbitmq:3-management
    container_name: tutorial_rabbit
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./rabbitmq/logs:/var/log/rabbitmq/log
    ports:
      - 5672:5672
      - 15672:15672

  server:
    # container_name: tutorial_backend
    build:
      context: ./
    environment:
      REDIS_URL: redis:6379
      MQ_HOSTNAME: rabbit
      CHOKIDAR_USEPOLLING: 'true'
      CHOKIDAR_INTERVAL: 1000
    ports:
    #  - 5000:5000
      - 5000
    volumes:
      - ./:/var/app
    depends_on:
      - redis
      - rabbit
      # - kafka 

  nginx:
    image: nginx:latest
    container_name: tutorial_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
    ports:
      - "4000:4000"

  django:
    # container_name: tutorial_backend
    build:
      context: ./hello
    environment:
      REDIS_URL: redis:6379
      MQ_HOSTNAME: rabbit
    ports:
      - 8000
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./hello:/code
    depends_on:
      - redis
      - rabbit

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: tutorial_zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: tutorial_kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      # KAFKA_CLUSTERS_0_JMXPORT: 9997
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry0:8085
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
      # KAFKA_CLUSTERS_1_NAME: secondLocal
      # KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka1:29092
      # KAFKA_CLUSTERS_1_ZOOKEEPER: zookeeper1:2181
      # KAFKA_CLUSTERS_1_JMXPORT: 9998
      # KAFKA_CLUSTERS_1_SCHEMAREGISTRY: http://schemaregistry1:8085
      # KAFKA_CLUSTERS_1_KAFKACONNECT_0_NAME: first
      # KAFKA_CLUSTERS_1_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083